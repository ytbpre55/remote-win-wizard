
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { CheckCircle, Phone } from "lucide-react";

const Pricing = () => {
  const pricingPlans = [
    {
      title: "G√≥i C∆° B·∫£n",
      subtitle: "1 m√°y t√≠nh",
      price: "150.000",
      originalPrice: null,
      description: "Ph√π h·ª£p cho c√° nh√¢n, gia ƒë√¨nh",
      features: [
        "C√†i Windows XP, 7, 8, 8.1, 10, 11",
        "H·ªó tr·ª£ t·ª´ xa qua internet",
        "B·∫£o h√†nh 30 ng√†y",
        "H·ªó tr·ª£ k·ªπ thu·∫≠t 24/7"
      ],
      isPopular: false,
      quantity: "1 m√°y"
    },
    {
      title: "G√≥i Ti·∫øt Ki·ªám",
      subtitle: "2 m√°y t√≠nh",
      price: "140.000",
      originalPrice: "300.000",
      description: "Ti·∫øt ki·ªám 20.000 VNƒê",
      features: [
        "T·∫•t c·∫£ t√≠nh nƒÉng g√≥i c∆° b·∫£n",
        "Gi·∫£m gi√° cho m√°y th·ª© 2",
        "H·ªó tr·ª£ ƒë·ªìng th·ªùi 2 m√°y",
        "∆Øu ti√™n h·ªó tr·ª£"
      ],
      isPopular: true,
      quantity: "2 m√°y"
    },
    {
      title: "G√≥i Gia ƒê√¨nh",
      subtitle: "3-4 m√°y t√≠nh",
      price: "130.000",
      originalPrice: "600.000",
      description: "Ti·∫øt ki·ªám 80.000 VNƒê",
      features: [
        "T·∫•t c·∫£ t√≠nh nƒÉng g√≥i ti·∫øt ki·ªám",
        "Gi·∫£m gi√° ƒë·∫øn 20.000/m√°y",
        "H·ªó tr·ª£ nhi·ªÅu m√°y c√πng l√∫c",
        "T∆∞ v·∫•n k·ªπ thu·∫≠t mi·ªÖn ph√≠"
      ],
      isPopular: false,
      quantity: "3-4 m√°y"
    },
    {
      title: "G√≥i Doanh Nghi·ªáp",
      subtitle: "5+ m√°y t√≠nh",
      price: "T·ª´ 120.000",
      originalPrice: null,
      description: "Gi√° ∆∞u ƒë√£i cho s·ªë l∆∞·ª£ng l·ªõn",
      features: [
        "Gi√° ∆∞u ƒë√£i t·ªët nh·∫•t",
        "H·ªó tr·ª£ k·ªπ thu·∫≠t ∆∞u ti√™n",
        "L·∫≠p k·∫ø ho·∫°ch tri·ªÉn khai",
        "H·ª£p ƒë·ªìng d√†i h·∫°n"
      ],
      isPopular: false,
      quantity: "5+ m√°y"
    }
  ];

  const detailedPricing = [
    { service: "C√†i Windows cho 1 m√°y", price: "150.000", unit: "VNƒê/m√°y", quantity: "1 m√°y" },
    { service: "C√†i Windows cho 2 m√°y", price: "140.000", unit: "VNƒê/m√°y", quantity: "2 m√°y" },
    { service: "C√†i Windows t·ª´ 3-4 m√°y", price: "130.000", unit: "VNƒê/m√°y", quantity: "‚â• 3 m√°y" },
    { service: "C√†i Windows t·ª´ 5 m√°y tr·ªü l√™n", price: "120.000", unit: "VNƒê/m√°y", quantity: "‚â• 5 m√°y" },
    { service: "C√†i Windows s·ªë l∆∞·ª£ng l·ªõn t·ª´ 10 m√°y", price: "100.000", unit: "VNƒê/m√°y", quantity: "‚â• 10 m√°y" }
  ];

  return (
    <section id="pricing" className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-3xl lg:text-4xl font-bold text-gray-800 mb-4">
            B·∫£ng Gi√° D·ªãch V·ª• C√†i Win T·ª´ Xa
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Gi√° c·∫£ minh b·∫°ch, h·ª£p l√Ω v·ªõi nhi·ªÅu g√≥i l·ª±a ch·ªçn ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n
          </p>
        </div>

        {/* Pricing Cards */}
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16">
          {pricingPlans.map((plan, index) => (
            <Card 
              key={index} 
              className={`relative hover:shadow-xl transition-all duration-300 ${
                plan.isPopular ? 'ring-2 ring-blue-500 shadow-lg' : ''
              }`}
            >
              {plan.isPopular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <span className="bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-medium">
                    Ph·ªï bi·∫øn nh·∫•t
                  </span>
                </div>
              )}
              
              <CardHeader className="text-center pb-4">
                <CardTitle className="text-xl font-bold text-gray-800">{plan.title}</CardTitle>
                <p className="text-gray-600">{plan.subtitle}</p>
                
                <div className="mt-4">
                  <div className="flex items-center justify-center">
                    <span className="text-3xl font-bold text-blue-600">{plan.price}</span>
                    <span className="text-gray-600 ml-1">VNƒê</span>
                  </div>
                  {plan.originalPrice && (
                    <p className="text-sm text-gray-500 line-through">
                      Gi√° g·ªëc: {plan.originalPrice} VNƒê
                    </p>
                  )}
                  <p className="text-sm text-green-600 font-medium">{plan.description}</p>
                </div>
              </CardHeader>

              <CardContent>
                <ul className="space-y-3 mb-6">
                  {plan.features.map((feature, featureIndex) => (
                    <li key={featureIndex} className="flex items-start space-x-3">
                      <CheckCircle className="text-green-500 w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span className="text-gray-700 text-sm">{feature}</span>
                    </li>
                  ))}
                </ul>

                <Button 
                  className={`w-full ${
                    plan.isPopular 
                      ? 'bg-blue-600 hover:bg-blue-700' 
                      : 'bg-gray-800 hover:bg-gray-900'
                  }`}
                  onClick={() => window.open('tel:0356243926')}
                >
                  <Phone className="w-4 h-4 mr-2" />
                  Li√™n h·ªá ngay
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Detailed Pricing Table */}
        <div className="bg-gray-50 rounded-2xl p-8">
          <h3 className="text-2xl font-bold text-gray-800 mb-6 text-center">
            B·∫£ng Gi√° Chi Ti·∫øt D·ªãch V·ª• C√†i Win T·ª´ Xa
          </h3>
          
          <div className="overflow-x-auto">
            <table className="w-full bg-white rounded-lg shadow-sm">
              <thead>
                <tr className="bg-blue-50">
                  <th className="px-6 py-4 text-left font-semibold text-gray-800">STT</th>
                  <th className="px-6 py-4 text-left font-semibold text-gray-800">D·ªãch v·ª•</th>
                  <th className="px-6 py-4 text-center font-semibold text-gray-800">Gi√°</th>
                  <th className="px-6 py-4 text-center font-semibold text-gray-800">S·ªë l∆∞·ª£ng</th>
                </tr>
              </thead>
              <tbody>
                {detailedPricing.map((item, index) => (
                  <tr key={index} className="border-b border-gray-100 hover:bg-gray-50">
                    <td className="px-6 py-4 font-medium text-gray-800">{index + 1}</td>
                    <td className="px-6 py-4 text-gray-700">{item.service}</td>
                    <td className="px-6 py-4 text-center">
                      <span className="font-bold text-blue-600">{item.price}</span>
                      <span className="text-gray-600 text-sm ml-1">{item.unit}</span>
                    </td>
                    <td className="px-6 py-4 text-center text-gray-700">{item.quantity}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          <div className="mt-8 text-center">
            <div className="bg-blue-600 text-white rounded-xl p-6 max-w-2xl mx-auto">
              <h4 className="text-xl font-bold mb-2">üí° L∆∞u √Ω quan tr·ªçng</h4>
              <p className="text-blue-100 mb-4">
                Gi√° tr√™n l√† gi√° cho vi·ªác c√†i ƒë·∫∑t Windows XP, 7, 8, 8.1, 10, 11 qua m·∫°ng internet
              </p>
              <p className="text-lg font-semibold">
                üìû Li√™n h·ªá ngay: 0356243926 ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n v√† b√°o gi√° chi ti·∫øt!
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Pricing;
